version: "3.5"
services:
  api:
    build:
      context: ./api
      dockerfile: ../api.dockerfile
    command:
      - uvicorn
      - app.main:app
      - --host
      - 0.0.0.0
      - --port
      - "80"
      - --root-path
      - /api
    depends_on:
      testdb:
        condition: service_healthy
      testfirebase:
        condition: service_healthy
    environment:
      - FIREBASE_AUTH_EMULATOR_HOST=testfirebase:9099
      - WEBUI_URL=${WEBUI_URL}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${TESTDB_HOST} # overwright
      - DB_PORT=${DB_PORT}
      - DB_SCHEMA=${DB_SCHEMA}
      - TESTDB_HOST=${TESTDB_HOST}
      - FIREBASE_API_KEY=${FIREBASE_API_KEY}
      - FIREBASE_CRED=${FIREBASE_CRED}
    labels:
      - traefik.http.routers.api.entrypoints=http
      - traefik.http.routers.api.priority=10
      - traefik.http.routers.api.rule=PathPrefix(`/api`)
      - traefik.http.routers.api.service=api
      - traefik.http.routers.api.middlewares=api@docker
      - traefik.http.middlewares.api.stripPrefix.prefixes=/api
      - traefik.http.services.api.loadBalancer.server.port=80
    volumes:
      - ./api/app:/app:ro
      - ./key:/key:ro
  testdb:
    image: postgres:14
    command:
      - postgres
      # - -c
      # - log_connections=on
      - -c
      - log_destination=stderr
      # - -c
      # - log_disconnections=on
      - -c
      - log_statement=all
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U ${DB_USER}
      interval: 10s
      timeout: 5s
      retries: 2
  traefik:
    image: traefik:latest
    depends_on:
      - api
      - web
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - ./traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock
  web:
    image: nginx:stable
    command:
      - /usr/sbin/nginx
      - -g
      - daemon off;
    labels:
      - traefik.http.routers.web.entrypoints=http
      - traefik.http.routers.web.priority=1
      - traefik.http.routers.web.rule=PathPrefix(`/`)
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./web/build:/usr/share/nginx/html
  testfirebase:
    build: ./firebase
    ports:
      - 4000:4000 # Emulator Suite UI
      - 9099:9099 # Auth
    volumes:
      - ./firebase:/opt/workspace
    working_dir: /opt/workspace
    command: "firebase emulators:start --import=./data-test"
    tty: true
    healthcheck:
      test: curl --fail http://localhost:9099 || exit 1
      interval: 10s
      timeout: 5s
      retries: 6
  e2eclient:
    build:
      context: ./e2etests
      dockerfile: ../e2e-test.dockerfile
    depends_on:
      - traefik
    environment:
      - BASE_URL=http://traefik:80
    volumes:
      - ./e2etests:/e2etests
