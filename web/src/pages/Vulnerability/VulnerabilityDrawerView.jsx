import KeyboardDoubleArrowRightIcon from "@mui/icons-material/KeyboardDoubleArrowRight";
import OpenInFullIcon from "@mui/icons-material/OpenInFull";
import { Box, Drawer, IconButton, Link, Stack, Tooltip, Typography } from "@mui/material";
import PropTypes from "prop-types";
import React from "react";
import { useNavigate } from "react-router-dom";

import { VulnerabilityView } from "./VulnerabilityView";

export function VulnerabilityDrawerView(props) {
  const { open, setOpen, hrefToFullPage, topic, topicActions, matchedTopicTag, service } = props;

  const navigate = useNavigate();

  return (
    <Drawer anchor="right" open={open} onClose={() => setOpen(false)}>
      <Box>
        <Tooltip arrow title="Close">
          <IconButton size="large" onClick={() => setOpen(false)}>
            <KeyboardDoubleArrowRightIcon fontSize="inherit" />
          </IconButton>
        </Tooltip>
        <Link onClick={() => navigate(hrefToFullPage)} preventscrollreset="true">
          <Tooltip title="Open in full page">
            <IconButton size="large">
              <OpenInFullIcon />
            </IconButton>
          </Tooltip>
        </Link>
      </Box>
      <Box sx={{ width: 800, px: 3 }}>
        <Typography variant="h5" sx={{ fontWeight: "bold", py: 2 }}>
          {topic.title}
        </Typography>
        <Stack spacing={2}>
          <VulnerabilityView
            topic={topic}
            topicActions={topicActions}
            matchedTopicTag={matchedTopicTag}
            service={service}
          />
        </Stack>
      </Box>
    </Drawer>
  );
}
VulnerabilityDrawerView.propTypes = {
  open: PropTypes.bool.isRequired,
  setOpen: PropTypes.func.isRequired,
  hrefToFullPage: PropTypes.string.isRequired,
  topic: PropTypes.object.isRequired,
  topicActions: PropTypes.array.isRequired,
  matchedTopicTag: PropTypes.object.isRequired,
  service: PropTypes.object.isRequired,
};
