import {
  Box,
  Card,
  CardContent,
  Chip,
  Link,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableRow,
  Tooltip,
  Typography,
} from "@mui/material";
import PropTypes from "prop-types";

import { SSVCPriorityStatusChip } from "../../components/SSVCPriorityStatusChip.jsx";
import { ssvcPriorityProps } from "../../utils/const.js";
import { AssigneesSelector } from "../Package/VulnTables/AssigneesSelector.jsx";
import { SafetyImpactSelector } from "../Package/VulnTables/SafetyImpactSelector.jsx";
import { VulnStatusSelector } from "../Package/VulnTables/VulnStatusSelector.jsx";
import { WarningTooltip } from "../Package/WarningTooltip.jsx";

export function TicketCard(props) {
  const {
    pteamId,
    serviceId,
    packageId,
    vulnId,
    members,
    references,
    actionByFixedVersions,
    vulnActions,
    ticket,
  } = props;

  const target =
    references.find((reference) => reference.dependencyId === ticket.dependency_id)?.target ||
    "N/A";

  return (
    <Card variant="outlined">
      <TableContainer>
        <Table>
          <TableBody>
            <TableRow>
              <TableCell sx={{ fontWeight: "bold" }}>SSVC Priority</TableCell>
              <TableCell>
                <Chip
                  label={ticket.ssvc_deployer_priority}
                  sx={{
                    bgcolor: ssvcPriorityProps[ticket.ssvc_deployer_priority].style.bgcolor,
                    color: "white",
                  }}
                />
              </TableCell>
            </TableRow>
            <TableRow>
              <TableCell sx={{ fontWeight: "bold" }}>Target</TableCell>
              <TableCell>
                <Tooltip placement="bottom-start" title={target}>
                  <Box
                    sx={{
                      maxWidth: { xs: 200, sm: 400 },
                      overflow: "hidden",
                      textOverflow: "ellipsis",
                      whiteSpace: "nowrap",
                    }}
                  >
                    {target}
                  </Box>
                </Tooltip>
              </TableCell>
            </TableRow>
            <TableRow>
              <TableCell sx={{ fontWeight: "bold" }}>Status</TableCell>
              <TableCell>
                <Box sx={{ display: "flex", alignItems: "center" }}>
                  <VulnStatusSelector
                    pteamId={pteamId}
                    serviceId={serviceId}
                    vulnId={vulnId}
                    packageId={packageId}
                    ticketId={ticket.ticket_id}
                    currentStatus={ticket.ticket_status}
                    actionByFixedVersions={actionByFixedVersions}
                    vulnActions={vulnActions}
                  />
                  {(ticket.ticket_status.vuln_status ?? "alerted") === "alerted" && (
                    <WarningTooltip message="No one has acknowledged this vuln" />
                  )}
                </Box>
              </TableCell>
            </TableRow>
            <TableRow>
              <TableCell sx={{ fontWeight: "bold" }}>Assignees</TableCell>
              <TableCell>
                <AssigneesSelector
                  key={ticket.ticket_status.assignees.join("")}
                  pteamId={pteamId}
                  serviceId={serviceId}
                  vulnId={vulnId}
                  packageId={packageId}
                  ticketId={ticket.ticket_id}
                  currentAssigneeIds={ticket.ticket_status.assignees}
                  members={members}
                />
              </TableCell>
            </TableRow>
            <TableRow>
              <TableCell sx={{ fontWeight: "bold" }}>Due date</TableCell>
              <TableCell>{ticket.ticket_status.scheduled_at || "N/A"}</TableCell>
            </TableRow>

            <TableRow>
              <TableCell sx={{ fontWeight: "bold" }}>Safety Impact</TableCell>
              <TableCell>
                <SafetyImpactSelector pteamId={pteamId} ticket={ticket} />
              </TableCell>
            </TableRow>
          </TableBody>
        </Table>
      </TableContainer>
      <CardContent>
        <Typography variant="body2" color="text.secondary">
          {ticket.ticket_id}
        </Typography>
      </CardContent>
    </Card>
  );
}

TicketCard.propTypes = {
  pteamId: PropTypes.string.isRequired,
  serviceId: PropTypes.string.isRequired,
  packageId: PropTypes.string.isRequired,
  vulnId: PropTypes.string.isRequired,
  members: PropTypes.object.isRequired,
  references: PropTypes.array.isRequired,
  actionByFixedVersions: PropTypes.object.isRequired,
  vulnActions: PropTypes.array.isRequired,
  ticket: PropTypes.object.isRequired,
};
