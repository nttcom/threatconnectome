import { Recommend as RecommendIcon, Warning as WarningIcon } from "@mui/icons-material";
import NavigateNextIcon from "@mui/icons-material/NavigateNext";
import {
  Box,
  Breadcrumbs,
  Card,
  Chip,
  List,
  ListItem,
  ListItemIcon,
  ListItemText,
  Stack,
  Tooltip,
  Typography,
} from "@mui/material";
import { green, yellow } from "@mui/material/colors";
import PropTypes from "prop-types";
import React from "react";
import { useParams } from "react-router-dom";

import { ActionTypeIcon } from "../../components/ActionTypeIcon";
import { ArtifactTagView } from "../../components/ArtifactTagView";

export function VulnerabilityView(props) {
  const { topic, topicActions, focusedTag, service } = props;

  window.scrollTo({ top: 0, behavior: "instant" });

  return (
    <>
      {/* Artifact Tag */}
      <Box>
        <Typography variant="h6" sx={{ fontWeight: "bold" }}>
          Artifact Tag
        </Typography>
        <ArtifactTagView artifactTag={focusedTag} topicActions={topicActions} />
      </Box>
      {/* Mitigations -- show actions currently */}
      <Box>
        <Typography variant="h6" sx={{ fontWeight: "bold" }}>
          Mitigations
        </Typography>
        <Card variant="outlined">
          <List>
            {topicActions.length === 0 ? (
              <ListItem>
                <ListItemText primary={"No data"} />
              </ListItem>
            ) : (
              topicActions.map((action) => (
                <ListItem key={action.action_id}>
                  <ListItemIcon>
                    <ActionTypeIcon
                      actionType={action.action_type}
                      disabled={!action.recommended}
                    />
                  </ListItemIcon>
                  <ListItemText primary={action.action} />
                </ListItem>
              ))
            )}
          </List>
        </Card>
      </Box>
      {/* Topic misp tags */}
      <Box>
        <Typography variant="h6" sx={{ fontWeight: "bold" }}>
          Topic Tags
        </Typography>
        {topic.misp_tags?.length > 0 ? (
          topic.misp_tags.map((mispTag) => (
            <Chip key={mispTag.tag_id} label={mispTag.tag_name} sx={{ m: 1 }} />
          ))
        ) : (
          <List>
            <ListItem>
              <ListItemText primary={"-"} />
            </ListItem>
          </List>
        )}
      </Box>
      {/* Topic Detail */}
      <Box>
        <Typography variant="h6" sx={{ fontWeight: "bold" }}>
          Detail
        </Typography>
        <Card variant="outlined" sx={{ p: 2 }}>
          <Typography variant="body1">{topic.abstract}</Typography>
        </Card>
      </Box>
    </>
  );
}
VulnerabilityView.propTypes = {
  topic: PropTypes.object.isRequired,
  topicActions: PropTypes.array.isRequired,
  focusedTag: PropTypes.object.isRequired,
  service: PropTypes.object.isRequired,
};
