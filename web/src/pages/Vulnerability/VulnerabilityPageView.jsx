import NavigateNextIcon from "@mui/icons-material/NavigateNext";
import { Box, Breadcrumbs, Link, Stack, Typography } from "@mui/material";
import PropTypes from "prop-types";
import { useNavigate } from "react-router-dom";

import { VulnerabilityView } from "./VulnerabilityView";

export function VulnerabilityPageView(props) {
  const {
    packageId,
    vuln,
    vulnActions,
    service,
    hrefToServicePage,
    hrefToPackagePage,
    references,
  } = props;

  window.scrollTo({ top: 0, behavior: "instant" });

  const navigate = useNavigate();

  // matchedVulnPackage: package obtained by packageId
  const { package_source_name, package_name, ecosystem } = references[0];
  const matchedVulnPackage = vuln.vulnerable_packages.find(
    (vulnerable_package) =>
      vulnerable_package.ecosystem === ecosystem &&
      (vulnerable_package.affected_name === package_source_name ||
        vulnerable_package.affected_name === package_name),
  );
  if (!matchedVulnPackage) throw new Error("No packageId for the vuln.");

  return (
    <>
      <Breadcrumbs separator={<NavigateNextIcon fontSize="small" />} aria-label="breadcrumb">
        <Link
          onClick={() => navigate(hrefToServicePage)}
          sx={{ color: "text.primary", cursor: "pointer" }}
        >
          {service.service_name}
        </Link>
        <Link
          onClick={() => navigate(hrefToPackagePage)}
          sx={{ color: "text.primary", cursor: "pointer" }}
        >
          {`${matchedVulnPackage.name}:${matchedVulnPackage.ecosystem}`}
        </Link>
        <Typography sx={{ color: "text.primary" }}>{vuln.title}</Typography>
      </Breadcrumbs>
      <Typography variant="h4" sx={{ fontWeight: "bold", py: 2 }}>
        {vuln.title}
      </Typography>
      <Box>
        <Stack spacing={2} sx={{ mb: 3 }}>
          <VulnerabilityView
            packageId={packageId}
            vuln={vuln}
            vulnActions={vulnActions}
            references={references}
          />
        </Stack>
      </Box>
    </>
  );
}
VulnerabilityPageView.propTypes = {
  packageId: PropTypes.string.isRequired,
  vuln: PropTypes.object.isRequired,
  vulnActions: PropTypes.array.isRequired,
  service: PropTypes.object.isRequired,
  hrefToServicePage: PropTypes.string.isRequired,
  hrefToPackagePage: PropTypes.string.isRequired,
  references: PropTypes.array.isRequired,
};
