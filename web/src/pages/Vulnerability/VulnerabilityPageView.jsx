import { Recommend as RecommendIcon, Warning as WarningIcon } from "@mui/icons-material";
import NavigateNextIcon from "@mui/icons-material/NavigateNext";
import {
  Box,
  Breadcrumbs,
  Card,
  Chip,
  Link,
  List,
  ListItem,
  ListItemIcon,
  ListItemText,
  Stack,
  Tooltip,
  Typography,
} from "@mui/material";
import { green, yellow } from "@mui/material/colors";
import PropTypes from "prop-types";
import React from "react";
import { useNavigate, useParams } from "react-router-dom";

import { ActionTypeIcon } from "../../components/ActionTypeIcon";
import { ArtifactTagView } from "../../components/ArtifactTagView";

import { VulnerabilityView } from "./VulnerabilityView";

export function VulnerabilityPageView(props) {
  const { topic, topicActions, focusedTag, service, hrefToServicePage, hrefToTagPage } = props;

  window.scrollTo({ top: 0, behavior: "instant" });

  const navigate = useNavigate();

  return (
    <>
      <Breadcrumbs separator={<NavigateNextIcon fontSize="small" />} aria-label="breadcrumb">
        <Link
          onClick={() => navigate(hrefToServicePage)}
          sx={{ color: "text.primary", cursor: "pointer" }}
        >
          {service.service_name}
        </Link>
        <Link
          onClick={() => navigate(hrefToTagPage)}
          sx={{ color: "text.primary", cursor: "pointer" }}
        >
          {focusedTag.tag_name}
        </Link>
        <Typography sx={{ color: "text.primary" }}>{topic.title}</Typography>
      </Breadcrumbs>
      <Typography variant="h4" sx={{ fontWeight: "bold", py: 2 }}>
        {topic.title}
      </Typography>
      <Box>
        <Stack spacing={2} sx={{ mb: 3 }}>
          <VulnerabilityView
            topic={topic}
            topicActions={topicActions}
            focusedTag={focusedTag}
            service={service}
          />
        </Stack>
      </Box>
    </>
  );
}
VulnerabilityPageView.propTypes = {
  topic: PropTypes.object.isRequired,
  topicActions: PropTypes.array.isRequired,
  focusedTag: PropTypes.object.isRequired,
  service: PropTypes.object.isRequired,
  hrefToServicePage: PropTypes.string.isRequired,
  hrefToTagPage: PropTypes.string.isRequired,
};
