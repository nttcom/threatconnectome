import {
  InfoOutlined,
  VerifiedUserOutlined,
  WarningAmber,
  Settings,
  Article,
  ExpandMore,
  ArrowBackIosNew,
} from "@mui/icons-material";
import {
  Box,
  Dialog,
  DialogTitle,
  DialogContent,
  List,
  ListItemButton,
  Typography,
  Grid,
  Paper,
  TextField,
  MenuItem,
  Stack,
  ListItemText,
  Accordion,
  AccordionSummary,
  AccordionDetails,
  ListItem,
  Chip,
  useTheme,
  useMediaQuery,
  IconButton,
  Slide,
} from "@mui/material";
import { useState } from "react";

const vulnerabilitiesData = [
  {
    id: "CVE-2024-12345",
    title: "package.json",
    status: "ÂØæÂøú‰∏≠",
    assignee: "Â±±Áî∞Â§™ÈÉé",
    deadline: "2025-11-01",
    ssvc: "Immediate", // Â§âÊõ¥
    safetyImpact: "Critical",
    packageManager: "npm",
    target: "WebApp Server",
    affectedVersions: "1.0.0 - 1.2.0",
    fixedVersions: "1.2.1",
    mitigation: "„Éë„ÉÉ„Ç±„Éº„Ç∏„Çí„Éê„Éº„Ç∏„Éß„É≥1.2.1„Å´„Ç¢„ÉÉ„Éó„Éá„Éº„Éà„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
    description:
      "„Åì„ÅÆËÑÜÂº±ÊÄß„ÅØ„ÄÅÁâπÂÆö„ÅÆÊù°‰ª∂‰∏ã„Åß„É™„É¢„Éº„Éà„ÅÆÊîªÊíÉËÄÖ„Åå‰ªªÊÑè„ÅÆ„Ç≥„Éº„Éâ„ÇíÂÆüË°å„Åß„Åç„ÇãÂèØËÉΩÊÄß„Åå„ÅÇ„Çã„ÇÇ„ÅÆ„Åß„Åô„ÄÇÂΩ±Èüø„ÇíÂèó„Åë„Çã„Ç∑„Çπ„ÉÜ„É†„Åß„ÅØÊó©ÊÄ•„Å™ÂØæÂøú„ÅåÊ±Ç„ÇÅ„Çâ„Çå„Åæ„Åô„ÄÇ",
  },
  {
    id: "CVE-2024-54321",
    title: "requirements.txt",
    status: "Êú™ÁùÄÊâã",
    assignee: "‰ΩêËó§Ëä±Â≠ê",
    deadline: "2025-12-15",
    ssvc: "Scheduled", // Â§âÊõ¥
    safetyImpact: "High",
    packageManager: "pip",
    target: "Admin Panel",
    affectedVersions: "0.9.0 - 1.0.5",
    fixedVersions: "1.1.0",
    mitigation: "„Éë„ÉÉ„ÉÅ„ÅÆÈÅ©Áî®„ÄÅ„Åæ„Åü„ÅØWAF„Åß„ÅÆ„Éï„Ç£„É´„Çø„É™„É≥„Ç∞„ÇíÊé®Â•®„Åó„Åæ„Åô„ÄÇ",
    description:
      "ÂÖ•ÂäõÂÄ§„ÅÆ„Çµ„Éã„Çø„Ç§„Ç∫„Åå‰∏çÂçÅÂàÜ„Å™„Åü„ÇÅ„ÄÅ„ÇØ„É≠„Çπ„Çµ„Ç§„Éà„Çπ„ÇØ„É™„Éó„ÉÜ„Ç£„É≥„Ç∞„ÅÆÊîªÊíÉ„Å´ÂØæ„Åó„Å¶ËÑÜÂº±„Åß„Åô„ÄÇ",
  },
  {
    id: "CVE-2024-55678",
    title: "pom.xml",
    status: "ÂØæÂøú‰∏≠",
    assignee: "Èà¥Êú®Ê¨°ÈÉé",
    deadline: "2025-10-20",
    ssvc: "Out-of-cycle", // Â§âÊõ¥
    safetyImpact: "Critical",
    packageManager: "maven",
    target: "Database Server",
    affectedVersions: "2.0.0 - 2.1.3",
    fixedVersions: "2.1.4",
    mitigation: "„Éë„É©„É°„Éº„ÇøÂåñ„ÇØ„Ç®„É™„ÇíÂà©Áî®„Åó„ÄÅÊúÄÊñ∞„Éê„Éº„Ç∏„Éß„É≥„Å´„Ç¢„ÉÉ„Éó„Éá„Éº„Éà„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
    description:
      "SQL„Ç§„É≥„Ç∏„Çß„ÇØ„Ç∑„Éß„É≥„Å´„Çà„Çä„ÄÅÊîªÊíÉËÄÖ„Åå‰ªªÊÑè„ÅÆSQL„Ç≥„Éû„É≥„Éâ„ÇíÂÆüË°å„Åß„Åç„ÇãÂèØËÉΩÊÄß„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ",
  },
  {
    id: "CVE-2024-56789",
    title: "Gemfile.lock",
    status: "Êú™ÁùÄÊâã",
    assignee: "Áî∞‰∏≠‰∏ÄÈÉé",
    deadline: "2025-11-30",
    ssvc: "Defer", // Â§âÊõ¥
    safetyImpact: "Moderate",
    packageManager: "gem",
    target: "API Gateway",
    affectedVersions: "3.0.0 - 3.2.1",
    fixedVersions: "3.2.2",
    mitigation: "ÊúÄÊñ∞„Éë„ÉÉ„ÉÅ„ÅÆÈÅ©Áî®„ÇíÊé®Â•®„Åó„Åæ„Åô„ÄÇ",
    description: "Â§ßÈáè„ÅÆ„É™„ÇØ„Ç®„Çπ„Éà„Å´„Çà„Çä„Çµ„Éº„Éì„Çπ„ÅåÂÅúÊ≠¢„Åô„ÇãÂèØËÉΩÊÄß„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ",
  },
  {
    id: "CVE-2024-67890",
    title: "package.json",
    status: "ÂØæÂøú‰∏≠",
    assignee: "È´òÊ©ãÁæéÂí≤",
    deadline: "2025-10-31",
    ssvc: "Immediate", // Â§âÊõ¥
    safetyImpact: "Critical",
    packageManager: "npm",
    target: "Authentication Service",
    affectedVersions: "4.5.0 - 4.7.2",
    fixedVersions: "4.7.3",
    mitigation: "„Éë„ÉÉ„ÉÅÈÅ©Áî®Âæå„Å´„Çµ„Éº„Éì„Çπ„ÇíÂÜçËµ∑Âãï„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
    description: "ÊîªÊíÉËÄÖ„Åå‰∏çÊ≠£„Å´Ê®©Èôê„ÇíÊòáÊ†º„Åï„Åõ„ÇãÂèØËÉΩÊÄß„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ",
  },
  {
    id: "CVE-2024-78901",
    title: "requirements.txt",
    status: "ÂÆå‰∫Ü",
    assignee: "‰Ωê„ÄÖÊú®ÂÅ•",
    deadline: "2025-09-15",
    ssvc: "Scheduled", // Â§âÊõ¥
    safetyImpact: "High",
    packageManager: "pip",
    target: "User Data Service",
    affectedVersions: "1.3.0 - 1.4.5",
    fixedVersions: "1.4.6",
    mitigation: "ÊöóÂè∑ÂåñÈÄö‰ø°„ÅÆÂ∞éÂÖ•„ÇíÊé®Â•®„Åó„Åæ„Åô„ÄÇ",
    description: "„É¶„Éº„Ç∂ÊÉÖÂ†±„ÅåÁ¨¨‰∏âËÄÖ„Å´ÊºèÊ¥©„Åô„Çã„É™„Çπ„ÇØ„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ",
  },
  {
    id: "CVE-2024-89012",
    title: "package.json",
    status: "Êú™ÁùÄÊâã",
    assignee: "‰∏≠ÊùëËëµ",
    deadline: "2025-12-01",
    ssvc: "Defer", // Â§âÊõ¥
    safetyImpact: "High",
    packageManager: "npm",
    target: "WebApp Client",
    affectedVersions: "0.8.0 - 1.0.0",
    fixedVersions: "1.0.1",
    mitigation: "CSRF„Éà„Éº„ÇØ„É≥„ÅÆÂÆüË£Ö„ÇíÊé®Â•®„Åó„Åæ„Åô„ÄÇ",
    description: "‰∏çÊ≠£„Å™„É™„ÇØ„Ç®„Çπ„Éà„Çí„É¶„Éº„Ç∂„ÅÆÊÑèÂõ≥„Å´Âèç„Åó„Å¶ÂÆüË°å„Åï„Åõ„ÇãÊîªÊíÉ„ÇíÈò≤„Åé„Åæ„Åô„ÄÇ",
  },
  {
    id: "CVE-2024-90123",
    title: "requirements.txt",
    status: "ÂØæÂøú‰∏≠",
    assignee: "ÊùæÊú¨Â§ßËºî",
    deadline: "2025-11-15",
    ssvc: "Immediate", // Â§âÊõ¥
    safetyImpact: "Critical",
    packageManager: "pip",
    target: "File Server",
    affectedVersions: "2.5.0 - 2.7.0",
    fixedVersions: "2.7.1",
    mitigation: "ÂÖ•ÂäõÊ§úË®º„ÅÆÂº∑Âåñ„ÇíÊé®Â•®„Åó„Åæ„Åô„ÄÇ",
    description: "‰∏çÊ≠£„Å™„Éë„ÇπÊìç‰Ωú„Å´„Çà„Çä‰ªªÊÑè„ÅÆ„Éï„Ç°„Ç§„É´„Å´„Ç¢„ÇØ„Çª„Çπ„Åï„Çå„ÇãÂç±Èô∫„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ",
  },
  {
    id: "CVE-2024-91234",
    title: "pom.xml",
    status: "ÂÆå‰∫Ü",
    assignee: "Â∞èÊûóÁúü‰∏Ä",
    deadline: "2025-10-05",
    ssvc: "Out-of-cycle", // Â§âÊõ¥
    safetyImpact: "Moderate",
    packageManager: "maven",
    target: "Authentication Service",
    affectedVersions: "3.1.0 - 3.3.5",
    fixedVersions: "3.3.6",
    mitigation: "„É≠„Ç∞„Ç§„É≥Ë©¶Ë°å„ÅÆÁõ£Ë¶ñ„ÇíÊé®Â•®„Åó„Åæ„Åô„ÄÇ",
    description: "Ë™çË®º„Éê„Ç§„Éë„Çπ„Å´„Çà„Çä‰∏çÊ≠£„Ç¢„ÇØ„Çª„Çπ„ÅÆÂèØËÉΩÊÄß„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ",
  },
];

const statuses = ["Êú™ÁùÄÊâã", "ÂØæÂøú‰∏≠", "ÂÆå‰∫Ü"];
const assignees = ["Â±±Áî∞Â§™ÈÉé", "‰ΩêËó§Ëä±Â≠ê", "Èà¥Êú®Ê¨°ÈÉé"];
const safetyImpacts = ["Critical", "High", "Medium", "Low"];

// Âõ∫ÂÆöË°®Á§∫Áî®„ÅÆ„Ç´„Çπ„Çø„É†„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà
const FixedInfoItem = ({ label, value, icon }) => (
  <Box
    sx={{
      p: 1,
      height: "100%",
      display: "flex",
      flexDirection: "column",
      justifyContent: "center",
    }}
  >
    <Typography
      variant="caption"
      color="text.secondary"
      sx={{ display: "flex", alignItems: "center", gap: 0.5 }}
    >
      {icon}
      {label}
    </Typography>
    <Typography sx={{ fontWeight: 500, pl: 2.5 }}>{value}</Typography>
  </Box>
);

const getSsvcStyles = (ssvc) => {
  if (!ssvc) return { backgroundColor: "#bdbdbd", color: "black" }; // „Éá„Éï„Ç©„É´„ÉàÔºà„Ç∞„É¨„ÉºÔºâ

  const lowerSsvc = ssvc.toLowerCase();

  switch (lowerSsvc) {
    case "immediate":
      return { backgroundColor: "#d32f2f", color: "white", fontWeight: "bold" }; // Ëµ§
    case "out-of-cycle":
      return { backgroundColor: "#f57c00", color: "white", fontWeight: "bold" }; // „Ç™„É¨„É≥„Ç∏
    case "scheduled":
      return { backgroundColor: "#fbc02d", color: "black", fontWeight: "bold" }; // ÈªÑËâ≤
    case "defer":
      return { backgroundColor: "#9e9e9e", color: "white", fontWeight: "bold" }; // Á∑ë
    default:
      return { backgroundColor: "#bdbdbd", color: "black", fontWeight: "bold" }; // „Åù„ÅÆ‰ªñ
  }
};

export default function VulnerabilitySplitDialog({ open, onClose }) {
  // --- ‚¨á 2. ÁîªÈù¢„Çµ„Ç§„Ç∫Ê§úÁü•„Éï„ÉÉ„ÇØ„ÇíËøΩÂä† ‚¨á ---
  const theme = useTheme();
  // 'md' (900px) „Çà„ÇäÁã≠„ÅÑÁîªÈù¢„Çí„É¢„Éê„Ç§„É´„Å®Âà§ÂÆö
  const isMobile = useMediaQuery(theme.breakpoints.down("md"));

  // --- ‚¨á 3. Áä∂ÊÖã„ÅÆÂàùÊúüÂÄ§„ÇíÂ§âÊõ¥ (Êú™ÈÅ∏ÊäûÁä∂ÊÖã„Å´„Åô„Çã) ‚¨á ---
  const [selectedIndex, setSelectedIndex] = useState(-1);
  const [selectedStatus, setSelectedStatus] = useState(null);

  const groupedVulnerabilitiesData = vulnerabilitiesData.reduce((acc, vul) => {
    (acc[vul.status] = acc[vul.status] || []).push(vul);
    return acc;
  }, {});

  const selectedVulnerability =
    selectedStatus && groupedVulnerabilitiesData[selectedStatus] && selectedIndex >= 0
      ? groupedVulnerabilitiesData[selectedStatus][selectedIndex]
      : null;

  const handleListItemClick = (status, index) => {
    setSelectedStatus(status);
    setSelectedIndex(index);
  };

  const handleCloseDetailView = () => {
    setSelectedStatus(null);
    setSelectedIndex(-1);
  };

  const handleExited = () => {
    setSelectedStatus(null);
    setSelectedIndex(-1);
  };

  // --- üé® 6. Â∑¶„Éö„Ç§„É≥Ôºà‰∏ÄË¶ßÔºâ„ÅÆ„Ç≥„É≥„ÉÜ„É≥„ÉÑ ---
  const ListPane = (
    <Box
      sx={{
        width: { xs: "100%", md: "40%" }, // „É¨„Çπ„Éù„É≥„Ç∑„ÉñÂØæÂøú
        height: "100%",
        overflowY: "auto",
        borderRight: { xs: "none", md: "1px solid #ddd" },
        bgcolor: "grey.50",
      }}
    >
      {statuses.map((status) => (
        <Accordion
          key={status}
          square
          disableGutters
          elevation={0}
          sx={{ "&:before": { display: "none" } }}
          // selectedStatus„Åånull„ÅÆÂ†¥Âêà„ÇÇËÄÉÊÖÆ„Åó„ÄÅ„Éá„Éï„Ç©„É´„Éà„ÅØ„ÄåÊú™ÁùÄÊâã„Äç„ÇíÈñã„Åè
          defaultExpanded={status === "Êú™ÁùÄÊâã"}
        >
          <AccordionSummary
            expandIcon={<ExpandMore />}
            sx={{
              bgcolor: "grey.200",
              borderBottom: "1px solid",
              borderColor: "grey.300",
            }}
          >
            <Typography component="span" sx={{ fontWeight: "bold" }}>
              {status} {`(${groupedVulnerabilitiesData[status]?.length || 0})`}
            </Typography>
          </AccordionSummary>
          <AccordionDetails sx={{ p: 0 }}>
            <List component="div" disablePadding>
              {groupedVulnerabilitiesData[status]?.length > 0 ? (
                groupedVulnerabilitiesData[status].map((vul, index) => {
                  return (
                    <ListItemButton
                      key={vul.id}
                      selected={status === selectedStatus && index === selectedIndex}
                      onClick={() => handleListItemClick(status, index)}
                      sx={{
                        pl: 4,
                        borderLeft: "4px solid transparent",
                        "&.Mui-selected": {
                          borderLeftColor: "primary.main",
                          backgroundColor: "blue.50",
                          "&:hover": {
                            backgroundColor: "blue.100",
                          },
                        },
                      }}
                    >
                      <ListItemText
                        primary={
                          <Typography component="span" noWrap>
                            {vul.title}
                          </Typography>
                        }
                        secondary={
                          <Chip
                            label={vul.ssvc}
                            size="small"
                            sx={{
                              ...getSsvcStyles(vul.ssvc),
                              borderRadius: "16px",
                              mt: 0.5,
                              height: "auto",
                              "& .MuiChip-label": {
                                paddingTop: "2px",
                                paddingBottom: "2px",
                              },
                            }}
                          />
                        }
                      />
                    </ListItemButton>
                  );
                })
              ) : (
                <ListItem sx={{ pl: 4 }}>
                  <ListItemText primary="No tasks" sx={{ color: "grey.500" }} />
                </ListItem>
              )}
            </List>
          </AccordionDetails>
        </Accordion>
      ))}
    </Box>
  );

  // --- üé® 6. Âè≥„Éö„Ç§„É≥ÔºàË©≥Á¥∞Ôºâ„ÅÆ„Ç≥„É≥„ÉÜ„É≥„ÉÑ ---
  const DetailPane = selectedVulnerability ? (
    <Box
      sx={{
        width: { xs: "100%", md: "60%" }, // „É¨„Çπ„Éù„É≥„Ç∑„ÉñÂØæÂøú
        height: "100%",
        overflowY: "auto",
        bgcolor: "grey.50",
      }}
    >
      {/* --- ‚¨á „É¢„Éê„Ç§„É´Â∞ÇÁî®„ÅÆ„ÄåÊàª„Çã„Äç„Éò„ÉÉ„ÉÄ„Éº ‚¨á --- */}
      {isMobile && (
        <Box
          sx={{
            p: 1,
            borderBottom: 1,
            borderColor: "divider",
            display: "flex",
            alignItems: "center",
            position: "sticky",
            top: 0,
            bgcolor: "grey.50",
            zIndex: 1,
          }}
        >
          <IconButton onClick={handleCloseDetailView} size="small" sx={{ mr: 1 }}>
            <ArrowBackIosNew fontSize="small" />
          </IconButton>
          <Typography variant="subtitle1" sx={{ fontWeight: 600 }} noWrap>
            {selectedVulnerability.title}
          </Typography>
        </Box>
      )}

      {/* Ë©≥Á¥∞„Ç´„Éº„Éâ„ÅÆ„É©„ÉÉ„Éë„Éº (padding„Çí„Åì„Åì„Å´Áßª„Åô) */}
      <Box sx={{ "& > .MuiPaper-root": { mb: 2.5 }, p: 2 }}>
        {/* „Ç´„Éº„Éâ1: Ë®≠ÂÆö */}
        <Paper variant="outlined">
          <Box
            sx={{
              p: 2,
              display: "flex",
              alignItems: "center",
              gap: 1,
              borderBottom: 1,
              borderColor: "divider",
            }}
          >
            <Settings color="action" />
            <Typography variant="h6" sx={{ fontWeight: 600 }}>
              Ë®≠ÂÆö
            </Typography>
          </Box>
          <Box p={2}>
            <Stack direction="row" spacing={2}>
              <TextField label="Status" select fullWidth value={selectedVulnerability.status}>
                {statuses.map((s) => (
                  <MenuItem key={s} value={s}>
                    {s}
                  </MenuItem>
                ))}
              </TextField>

              <TextField
                label="Safety Impact"
                select
                fullWidth
                value={selectedVulnerability.safetyImpact}
              >
                {safetyImpacts.map((si) => (
                  <MenuItem key={si} value={si}>
                    {si}
                  </MenuItem>
                ))}
              </TextField>
            </Stack>
          </Box>
          <Box p={2} pt={0}>
            <TextField label="ÊãÖÂΩìËÄÖ" select fullWidth value={selectedVulnerability.assignee}>
              {assignees.map((a) => (
                <MenuItem key={a} value={a}>
                  {a}
                </MenuItem>
              ))}
            </TextField>
          </Box>
        </Paper>

        {/* „Ç´„Éº„Éâ2: Âõ∫ÂÆöË°®Á§∫„ÅÆÊÉÖÂ†± */}
        <Paper variant="outlined">
          <Box
            sx={{
              p: 2,
              display: "flex",
              alignItems: "center",
              gap: 1,
              borderBottom: 1,
              borderColor: "divider",
            }}
          >
            <Article color="action" />
            <Typography variant="h6" sx={{ fontWeight: 600 }}>
              Ë©≥Á¥∞ÊÉÖÂ†±
            </Typography>
          </Box>
          <Box p={2}>
            <Grid container spacing={2}>
              {/* --- ‚¨á 8. Grid „ÅÆÊõ∏„ÅçÊñπ„Çí v5 ÂΩ¢Âºè„Å´‰øÆÊ≠£ ‚¨á --- */}
              <Grid item xs={12} md={6}>
                <FixedInfoItem
                  label="ÂÆå‰∫ÜÊúüÈôê"
                  value={selectedVulnerability.deadline}
                  icon={<InfoOutlined fontSize="small" />}
                />
              </Grid>
              <Grid item xs={12} md={6}>
                <FixedInfoItem
                  label="ÊúÄÁµÇÊõ¥Êñ∞"
                  value="2025-10-21"
                  icon={<InfoOutlined fontSize="small" />}
                />
              </Grid>
              <Grid item xs={12} md={6}>
                <FixedInfoItem
                  label="TargetÂêç"
                  value={selectedVulnerability.target}
                  icon={<InfoOutlined fontSize="small" />}
                />
              </Grid>
              <Grid item xs={12} md={6}>
                <FixedInfoItem
                  label="SSVC"
                  value={selectedVulnerability.ssvc}
                  icon={<WarningAmber fontSize="small" />}
                />
              </Grid>
              <Grid item xs={12} md={6}>
                <FixedInfoItem
                  label="„Éë„ÉÉ„Ç±„Éº„Ç∏„Éû„Éç„Éº„Ç∏„É£„Éº"
                  value={selectedVulnerability.packageManager}
                  icon={<InfoOutlined fontSize="small" />}
                />
              </Grid>
              <Grid item xs={12} md={6}>
                <FixedInfoItem
                  label="Target"
                  value={selectedVulnerability.title}
                  icon={<InfoOutlined fontSize="small" />}
                />
              </Grid>
              {/* --- ‚¨Ü 8. Grid „ÅÆÊõ∏„ÅçÊñπ„Çí v5 ÂΩ¢Âºè„Å´‰øÆÊ≠£ ‚¨Ü --- */}
            </Grid>
          </Box>
        </Paper>

        {/* „Ç´„Éº„Éâ3: ÂΩ±Èüø„Å®ÂØæÁ≠ñ (Â§âÊõ¥„Å™„Åó) */}
        <Paper variant="outlined">{/* ... (‰∏≠Ë∫´„ÅØÁúÅÁï•) ... */}</Paper>
        <Paper variant="outlined">{/* ... (‰∏≠Ë∫´„ÅØÁúÅÁï•) ... */}</Paper>

        {/* „Ç´„Éº„Éâ4: ËÑÜÂº±ÊÄßË©≥Á¥∞ (Â§âÊõ¥„Å™„Åó) */}
        <Paper variant="outlined">{/* ... (‰∏≠Ë∫´„ÅØÁúÅÁï•) ... */}</Paper>
      </Box>
    </Box>
  ) : !isMobile ? (
    // --- PC„ÅßÊú™ÈÅ∏ÊäûÊôÇ„ÅÆ„Éó„É¨„Éº„Çπ„Éõ„É´„ÉÄ„Éº ---
    <Box
      sx={{
        width: "60%",
        height: "100%",
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        bgcolor: "grey.100",
      }}
    >
      <Typography color="text.secondary">„Çø„Çπ„ÇØ„ÇíÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑ</Typography>
    </Box>
  ) : null; // „É¢„Éê„Ç§„É´„Åß„ÅØÊú™ÈÅ∏ÊäûÊôÇ„ÅØ‰Ωï„ÇÇË°®Á§∫„Åó„Å™„ÅÑ

  return (
    <Dialog
      open={open}
      onClose={onClose}
      maxWidth="lg"
      fullWidth
      TransitionProps={{ onExited: handleExited }}
    >
      <DialogTitle sx={{ fontWeight: 700, borderBottom: 1, borderColor: "divider" }}>
        ËÑÜÂº±ÊÄßÁÆ°ÁêÜ
      </DialogTitle>
      <DialogContent sx={{ bgcolor: "grey.50", p: 0 }}>
        {isMobile ? (
          // ==========================
          //  üì± „É¢„Éê„Ç§„É´Ë°®Á§∫
          // ==========================
          <Box sx={{ height: "70vh", position: "relative", overflow: "hidden" }}>
            {/* --- „Çπ„ÉÜ„Éº„Ç∏1: „Çø„Çπ„ÇØ‰∏ÄË¶ß --- */}

            <Box
              sx={{
                position: "absolute",
                top: 0,
                left: 0,
                width: "100%",
                height: "100%",
              }}
            >
              {ListPane}
            </Box>

            {/* --- „Çπ„ÉÜ„Éº„Ç∏2: „Çø„Çπ„ÇØË©≥Á¥∞ --- */}
            <Slide
              direction="left"
              in={!!selectedVulnerability} // ÈÅ∏ÊäûÊôÇ„Å´Ë°®Á§∫
              mountOnEnter
              unmountOnExit
            >
              <Box
                sx={{
                  position: "absolute",
                  top: 0,
                  left: 0,
                  width: "100%",
                  height: "100%",
                }}
              >
                {DetailPane}
              </Box>
            </Slide>
          </Box>
        ) : (
          // ==========================
          //  üñ•Ô∏è PCË°®Á§∫
          // ==========================
          <Box sx={{ display: "flex", height: "70vh" }}>
            {ListPane}
            {DetailPane}
          </Box>
        )}
      </DialogContent>
    </Dialog>
  );
}
