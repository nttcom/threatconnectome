import {
  InfoOutlined,
  VerifiedUserOutlined,
  WarningAmber,
  Settings,
  Article,
} from "@mui/icons-material";
import {
  Box,
  Dialog,
  DialogTitle,
  DialogContent,
  List,
  ListItemButton,
  Typography,
  Grid,
  Paper,
  Fade,
  TextField,
  MenuItem,
  Stack,
  ListItemText,
} from "@mui/material";
import { useState } from "react";

const vulnerabilitiesData = [
  {
    id: "CVE-2024-12345",
    title: "リモートコード実行の脆弱性",
    status: "対応中",
    assignee: "山田太郎",
    deadline: "2025-11-01",
    ssvc: "High",
    safetyImpact: "Critical",
    packageManager: "npm",
    target: "WebApp Server",
    affectedVersions: "1.0.0 - 1.2.0",
    fixedVersions: "1.2.1",
    mitigation: "パッケージをバージョン1.2.1にアップデートしてください。",
    description:
      "この脆弱性は、特定の条件下でリモートの攻撃者が任意のコードを実行できる可能性があるものです。影響を受けるシステムでは早急な対応が求められます。",
  },
  {
    id: "CVE-2024-54321",
    title: "クロスサイトスクリプティング(XSS)",
    status: "未着手",
    assignee: "佐藤花子",
    deadline: "2025-12-15",
    ssvc: "Medium",
    safetyImpact: "High",
    packageManager: "pip",
    target: "Admin Panel",
    affectedVersions: "0.9.0 - 1.0.5",
    fixedVersions: "1.1.0",
    mitigation: "パッチの適用、またはWAFでのフィルタリングを推奨します。",
    description:
      "入力値のサニタイズが不十分なため、クロスサイトスクリプティングの攻撃に対して脆弱です。",
  },
];

const statuses = ["未着手", "対応中", "完了"];
const assignees = ["山田太郎", "佐藤花子", "鈴木次郎"];
const safetyImpacts = ["Critical", "High", "Medium", "Low"];

// 固定表示用のカスタムコンポーネント
const FixedInfoItem = ({ label, value, icon }) => (
  <Box
    sx={{
      p: 1,
      height: "100%",
      display: "flex",
      flexDirection: "column",
      justifyContent: "center",
    }}
  >
    <Typography
      variant="caption"
      color="text.secondary"
      sx={{ display: "flex", alignItems: "center", gap: 0.5 }}
    >
      {icon}
      {label}
    </Typography>
    <Typography sx={{ fontWeight: 500, pl: 2.5 }}>{value}</Typography>
  </Box>
);

export default function VulnerabilitySplitDialog({ open, onClose }) {
  const [selectedIndex, setSelectedIndex] = useState(0);
  const [fadeIn, setFadeIn] = useState(true);
  const [vulnerabilities, setVulnerabilities] = useState(vulnerabilitiesData);

  const selectedVulnerability = vulnerabilities[selectedIndex];

  const handleListItemClick = (index) => {
    if (index === selectedIndex) return;
    setFadeIn(false);
    setTimeout(() => {
      setSelectedIndex(index);
      setFadeIn(true);
    }, 200);
  };

  const handleChange = (field, value) => {
    const newVulnerabilities = [...vulnerabilities];
    newVulnerabilities[selectedIndex] = { ...newVulnerabilities[selectedIndex], [field]: value };
    setVulnerabilities(newVulnerabilities);
  };

  return (
    <Dialog open={open} onClose={onClose} maxWidth="lg" fullWidth>
      <DialogTitle sx={{ fontWeight: 700, borderBottom: 1, borderColor: "divider" }}>
        脆弱性管理
      </DialogTitle>
      <DialogContent sx={{ bgcolor: "grey.50", p: 3 }}>
        <Box sx={{ display: "flex", height: "90vh", gap: 3 }}>
          {/* 左ペイン: 脆弱性一覧 */}
          <Paper elevation={0} variant="outlined" sx={{ width: "40%", overflowY: "auto" }}>
            <List component="nav" disablePadding>
              {vulnerabilities.map((vul, index) => (
                <ListItemButton
                  key={vul.id}
                  selected={index === selectedIndex}
                  onClick={() => handleListItemClick(index)}
                  sx={{
                    justifyContent: "flex-start",
                    borderLeft: "4px solid transparent",
                    "&.Mui-selected": {
                      borderLeftColor: "primary.main",
                      backgroundColor: "rgba(25, 118, 210, 0.12)",
                      "$:hover": {
                        backgroundColor: "rgba(25, 118, 210, 0.18)",
                      },
                    },
                  }}
                >
                  <ListItemText primary={vul.title} />
                </ListItemButton>
              ))}
            </List>
          </Paper>

          {/* 右ペイン */}
          <Fade in={fadeIn} timeout={400}>
            <Box sx={{ width: "60%", overflowY: "auto", "& > .MuiPaper-root": { mb: 2.5 } }}>
              {/* カード1: 選択肢のある設定項目 */}
              <Paper variant="outlined">
                <Box
                  sx={{
                    p: 2,
                    display: "flex",
                    alignItems: "center",
                    gap: 1,
                    borderBottom: 1,
                    borderColor: "divider",
                  }}
                >
                  <Settings color="action" />
                  <Typography variant="h6" sx={{ fontWeight: 600 }}>
                    設定
                  </Typography>
                </Box>
                <Box p={2}>
                  {/* Grid container を Stack に変更 */}
                  <Stack direction="row" spacing={2}>
                    {/* Grid size={{...}} は不要。TextField を直接配置 */}
                    <TextField
                      label="Status"
                      select
                      fullWidth
                      value={selectedVulnerability.status}
                      onChange={(e) => handleChange("status", e.target.value)}
                    >
                      {statuses.map((s) => (
                        <MenuItem key={s} value={s}>
                          {s}
                        </MenuItem>
                      ))}
                    </TextField>

                    <TextField
                      label="Safety Impact"
                      select
                      fullWidth
                      value={selectedVulnerability.safetyImpact}
                      onChange={(e) => handleChange("safetyImpact", e.target.value)}
                    >
                      {safetyImpacts.map((si) => (
                        <MenuItem key={si} value={si}>
                          {si}
                        </MenuItem>
                      ))}
                    </TextField>
                  </Stack>
                </Box>
                <Box p={2} pt={0}>
                  <TextField
                    label="担当者"
                    select
                    fullWidth
                    value={selectedVulnerability.assignee}
                    onChange={(e) => handleChange("assignee", e.target.value)}
                  >
                    {assignees.map((a) => (
                      <MenuItem key={a} value={a}>
                        {a}
                      </MenuItem>
                    ))}
                  </TextField>
                </Box>
              </Paper>

              {/* カード2: 固定表示の情報 */}
              <Paper variant="outlined">
                <Box
                  sx={{
                    p: 2,
                    display: "flex",
                    alignItems: "center",
                    gap: 1,
                    borderBottom: 1,
                    borderColor: "divider",
                  }}
                >
                  <Article color="action" />
                  <Typography variant="h6" sx={{ fontWeight: 600 }}>
                    詳細情報
                  </Typography>
                </Box>
                <Box p={2}>
                  <Grid container spacing={2}>
                    <Grid size={{ xs: 12, md: 6 }}>
                      <FixedInfoItem
                        label="完了期限"
                        value={selectedVulnerability.deadline}
                        icon={<InfoOutlined fontSize="small" />}
                      />
                    </Grid>
                    <Grid size={{ xs: 12, md: 6 }}>
                      <FixedInfoItem
                        label="Target名"
                        value={selectedVulnerability.target}
                        icon={<InfoOutlined fontSize="small" />}
                      />
                    </Grid>
                    <Grid size={{ xs: 12, md: 6 }}>
                      <FixedInfoItem
                        label="SSVC"
                        value={selectedVulnerability.ssvc}
                        icon={<WarningAmber fontSize="small" />}
                      />
                    </Grid>
                    <Grid size={{ xs: 12, md: 6 }}>
                      <FixedInfoItem
                        label="パッケージマネージャー"
                        value={selectedVulnerability.packageManager}
                        icon={<InfoOutlined fontSize="small" />}
                      />
                    </Grid>
                  </Grid>
                </Box>
              </Paper>

              {/* カード3: 影響と対策 */}
              <Paper variant="outlined">
                <Box
                  sx={{
                    p: 2,
                    display: "flex",
                    alignItems: "center",
                    gap: 1,
                    borderBottom: 1,
                    borderColor: "divider",
                  }}
                >
                  <InfoOutlined color="action" />
                  <Typography variant="h6" sx={{ fontWeight: 600 }}>
                    影響と対策
                  </Typography>
                </Box>
                <Box sx={{ p: 2 }}>
                  <Typography variant="subtitle2" color="text.secondary">
                    影響バージョンと修正バージョン
                  </Typography>
                  <Typography
                    sx={{ mb: 2, fontWeight: 500 }}
                  >{`${selectedVulnerability.affectedVersions} → ${selectedVulnerability.fixedVersions}`}</Typography>
                  <Typography variant="subtitle2" color="text.secondary">
                    Mitigation・緩和策
                  </Typography>
                  <Typography sx={{ whiteSpace: "pre-line", fontWeight: 500 }}>
                    {selectedVulnerability.mitigation}
                  </Typography>
                </Box>
              </Paper>

              {/* カード4: 脆弱性詳細 */}
              <Paper variant="outlined">
                <Box
                  sx={{
                    p: 2,
                    display: "flex",
                    alignItems: "center",
                    gap: 1,
                    borderBottom: 1,
                    borderColor: "divider",
                  }}
                >
                  <VerifiedUserOutlined color="action" />
                  <Typography variant="h6" sx={{ fontWeight: 600 }}>
                    脆弱性詳細
                  </Typography>
                </Box>
                <Box sx={{ p: 2 }}>
                  <Typography sx={{ whiteSpace: "pre-line" }}>
                    {selectedVulnerability.description}
                  </Typography>
                </Box>
              </Paper>
            </Box>
          </Fade>
        </Box>
      </DialogContent>
    </Dialog>
  );
}
