import {
  InfoOutlined,
  VerifiedUserOutlined,
  WarningAmber,
  Settings,
  Article,
  ExpandMore,
} from "@mui/icons-material";
import {
  Box,
  Dialog,
  DialogTitle,
  DialogContent,
  List,
  ListItemButton,
  Typography,
  Grid,
  Paper,
  TextField,
  MenuItem,
  Stack,
  ListItemText,
  Accordion,
  AccordionSummary,
  AccordionDetails,
  ListItem,
} from "@mui/material";
import { useState } from "react";

const vulnerabilitiesData = [
  {
    id: "CVE-2024-12345",
    title: "リモートコード実行の脆弱性",
    status: "対応中",
    assignee: "山田太郎",
    deadline: "2025-11-01",
    ssvc: "High",
    safetyImpact: "Critical",
    packageManager: "npm",
    target: "WebApp Server",
    affectedVersions: "1.0.0 - 1.2.0",
    fixedVersions: "1.2.1",
    mitigation: "パッケージをバージョン1.2.1にアップデートしてください。",
    description:
      "この脆弱性は、特定の条件下でリモートの攻撃者が任意のコードを実行できる可能性があるものです。影響を受けるシステムでは早急な対応が求められます。",
  },
  {
    id: "CVE-2024-54321",
    title: "クロスサイトスクリプティング(XSS)",
    status: "未着手",
    assignee: "佐藤花子",
    deadline: "2025-12-15",
    ssvc: "Medium",
    safetyImpact: "High",
    packageManager: "pip",
    target: "Admin Panel",
    affectedVersions: "0.9.0 - 1.0.5",
    fixedVersions: "1.1.0",
    mitigation: "パッチの適用、またはWAFでのフィルタリングを推奨します。",
    description:
      "入力値のサニタイズが不十分なため、クロスサイトスクリプティングの攻撃に対して脆弱です。",
  },
  {
    id: "CVE-2024-55678",
    title: "SQLインジェクションの脆弱性",
    status: "対応中",
    assignee: "鈴木次郎",
    deadline: "2025-10-20",
    ssvc: "High",
    safetyImpact: "Critical",
    packageManager: "maven",
    target: "Database Server",
    affectedVersions: "2.0.0 - 2.1.3",
    fixedVersions: "2.1.4",
    mitigation: "パラメータ化クエリを利用し、最新バージョンにアップデートしてください。",
    description:
      "SQLインジェクションにより、攻撃者が任意のSQLコマンドを実行できる可能性があります。",
  },
  {
    id: "CVE-2024-56789",
    title: "サービス拒否攻撃(DoS)の脆弱性",
    status: "未着手",
    assignee: "田中一郎",
    deadline: "2025-11-30",
    ssvc: "Medium",
    safetyImpact: "Moderate",
    packageManager: "gem",
    target: "API Gateway",
    affectedVersions: "3.0.0 - 3.2.1",
    fixedVersions: "3.2.2",
    mitigation: "最新パッチの適用を推奨します。",
    description: "大量のリクエストによりサービスが停止する可能性があります。",
  },
  {
    id: "CVE-2024-67890",
    title: "権限昇格の脆弱性",
    status: "対応中",
    assignee: "高橋美咲",
    deadline: "2025-10-31",
    ssvc: "High",
    safetyImpact: "Critical",
    packageManager: "npm",
    target: "Authentication Service",
    affectedVersions: "4.5.0 - 4.7.2",
    fixedVersions: "4.7.3",
    mitigation: "パッチ適用後にサービスを再起動してください。",
    description: "攻撃者が不正に権限を昇格させる可能性があります。",
  },
  {
    id: "CVE-2024-78901",
    title: "情報漏洩の脆弱性",
    status: "完了",
    assignee: "佐々木健",
    deadline: "2025-09-15",
    ssvc: "Medium",
    safetyImpact: "High",
    packageManager: "pip",
    target: "User Data Service",
    affectedVersions: "1.3.0 - 1.4.5",
    fixedVersions: "1.4.6",
    mitigation: "暗号化通信の導入を推奨します。",
    description: "ユーザ情報が第三者に漏洩するリスクがあります。",
  },
  {
    id: "CVE-2024-89012",
    title: "クロスサイトリクエストフォージェリ(CSRF)",
    status: "未着手",
    assignee: "中村葵",
    deadline: "2025-12-01",
    ssvc: "Medium",
    safetyImpact: "High",
    packageManager: "npm",
    target: "WebApp Client",
    affectedVersions: "0.8.0 - 1.0.0",
    fixedVersions: "1.0.1",
    mitigation: "CSRFトークンの実装を推奨します。",
    description: "不正なリクエストをユーザの意図に反して実行させる攻撃を防ぎます。",
  },
  {
    id: "CVE-2024-90123",
    title: "ディレクトリトラバーサルの脆弱性",
    status: "対応中",
    assignee: "松本大輔",
    deadline: "2025-11-15",
    ssvc: "High",
    safetyImpact: "Critical",
    packageManager: "pip",
    target: "File Server",
    affectedVersions: "2.5.0 - 2.7.0",
    fixedVersions: "2.7.1",
    mitigation: "入力検証の強化を推奨します。",
    description: "不正なパス操作により任意のファイルにアクセスされる危険があります。",
  },
  {
    id: "CVE-2024-91234",
    title: "不正アクセスの脆弱性",
    status: "完了",
    assignee: "小林真一",
    deadline: "2025-10-05",
    ssvc: "Medium",
    safetyImpact: "Moderate",
    packageManager: "maven",
    target: "Authentication Service",
    affectedVersions: "3.1.0 - 3.3.5",
    fixedVersions: "3.3.6",
    mitigation: "ログイン試行の監視を推奨します。",
    description: "認証バイパスにより不正アクセスの可能性があります。",
  },
];

const statuses = ["未着手", "対応中", "完了"];
const assignees = ["山田太郎", "佐藤花子", "鈴木次郎"];
const safetyImpacts = ["Critical", "High", "Medium", "Low"];

// 固定表示用のカスタムコンポーネント
const FixedInfoItem = ({ label, value, icon }) => (
  <Box
    sx={{
      p: 1,
      height: "100%",
      display: "flex",
      flexDirection: "column",
      justifyContent: "center",
    }}
  >
    <Typography
      variant="caption"
      color="text.secondary"
      sx={{ display: "flex", alignItems: "center", gap: 0.5 }}
    >
      {icon}
      {label}
    </Typography>
    <Typography sx={{ fontWeight: 500, pl: 2.5 }}>{value}</Typography>
  </Box>
);

export default function VulnerabilitySplitDialog({ open, onClose }) {
  const [selectedIndex, setSelectedIndex] = useState(0);
  const [selectedStatus, setSelectedStatus] = useState("未着手");

  const grounpedVulnerabilitiesData = vulnerabilitiesData.reduce((acc, vul) => {
    (acc[vul.status] = acc[vul.status] || []).push(vul);
    return acc;
  }, {});
  console.log("grounpedVulnerabilitiesData:", grounpedVulnerabilitiesData);

  const selectedVulnerability = grounpedVulnerabilitiesData[selectedStatus][selectedIndex];

  const handleListItemClick = (status, index) => {
    setSelectedStatus(status);
    setSelectedIndex(index);
  };

  return (
    <Dialog open={open} onClose={onClose} maxWidth="lg" fullWidth>
      <DialogTitle sx={{ fontWeight: 700, borderBottom: 1, borderColor: "divider" }}>
        脆弱性管理
      </DialogTitle>
      <DialogContent sx={{ bgcolor: "grey.50", p: 0 }}>
        <Box sx={{ display: "flex", height: "70vh" }}>
          {/* 左ペイン: 脆弱性一覧 */}
          <Box sx={{ width: "40%", overflowY: "auto", borderRight: "1px solid #ddd" }}>
            {statuses.map((status) => (
              <Accordion
                key={status}
                square
                disableGutters
                elevation={0}
                sx={{ "&:before": { display: "none" } }}
              >
                <AccordionSummary
                  expandIcon={<ExpandMore />}
                  sx={{
                    bgcolor: "grey.200",
                    borderBottom: "1px solid",
                    borderColor: "grey.300",
                  }}
                >
                  <Typography component="span" sx={{ fontWeight: "bold" }}>
                    {status}
                  </Typography>
                </AccordionSummary>
                <AccordionDetails sx={{ p: 0 }}>
                  <List component="div" disablePadding>
                    {grounpedVulnerabilitiesData[status]?.length > 0 ? (
                      grounpedVulnerabilitiesData[status].map((vul, index) => {
                        console.log("Rendering vul:", vul, "at index:", index);
                        return (
                          <ListItemButton
                            key={vul.id}
                            selected={status === selectedStatus && index === selectedIndex}
                            onClick={() => handleListItemClick(status, index)}
                            sx={{
                              pl: 4,
                              borderLeft: "4px solid transparent",
                              "&.Mui-selected": {
                                borderLeftColor: "primary.main",
                                backgroundColor: "blue.50",
                                "&:hover": {
                                  backgroundColor: "blue.100",
                                },
                              },
                            }}
                          >
                            <ListItemText primary={vul.title} />
                          </ListItemButton>
                        );
                      })
                    ) : (
                      <ListItem sx={{ pl: 4 }}>
                        <ListItemText primary="No tasks" sx={{ color: "grey.500" }} />
                      </ListItem>
                    )}
                  </List>
                </AccordionDetails>
              </Accordion>
            ))}
          </Box>
          {/* 右ペイン */}
          <Box sx={{ width: "60%", overflowY: "auto", "& > .MuiPaper-root": { mb: 2.5 }, p: 2 }}>
            {/* カード1: 選択肢のある設定項目 */}
            <Paper variant="outlined">
              <Box
                sx={{
                  p: 2,
                  display: "flex",
                  alignItems: "center",
                  gap: 1,
                  borderBottom: 1,
                  borderColor: "divider",
                }}
              >
                <Settings color="action" />
                <Typography variant="h6" sx={{ fontWeight: 600 }}>
                  設定
                </Typography>
              </Box>
              <Box p={2}>
                {/* Grid container を Stack に変更 */}
                <Stack direction="row" spacing={2}>
                  {/* Grid size={{...}} は不要。TextField を直接配置 */}
                  <TextField label="Status" select fullWidth value={selectedVulnerability.status}>
                    {statuses.map((s) => (
                      <MenuItem key={s} value={s}>
                        {s}
                      </MenuItem>
                    ))}
                  </TextField>

                  <TextField
                    label="Safety Impact"
                    select
                    fullWidth
                    value={selectedVulnerability.safetyImpact}
                  >
                    {safetyImpacts.map((si) => (
                      <MenuItem key={si} value={si}>
                        {si}
                      </MenuItem>
                    ))}
                  </TextField>
                </Stack>
              </Box>
              <Box p={2} pt={0}>
                <TextField label="担当者" select fullWidth value={selectedVulnerability.assignee}>
                  {assignees.map((a) => (
                    <MenuItem key={a} value={a}>
                      {a}
                    </MenuItem>
                  ))}
                </TextField>
              </Box>
            </Paper>

            {/* カード2: 固定表示の情報 */}
            <Paper variant="outlined">
              <Box
                sx={{
                  p: 2,
                  display: "flex",
                  alignItems: "center",
                  gap: 1,
                  borderBottom: 1,
                  borderColor: "divider",
                }}
              >
                <Article color="action" />
                <Typography variant="h6" sx={{ fontWeight: 600 }}>
                  詳細情報
                </Typography>
              </Box>
              <Box p={2}>
                <Grid container spacing={2}>
                  <Grid size={{ xs: 12, md: 6 }}>
                    <FixedInfoItem
                      label="完了期限"
                      value={selectedVulnerability.deadline}
                      icon={<InfoOutlined fontSize="small" />}
                    />
                  </Grid>
                  <Grid size={{ xs: 12, md: 6 }}>
                    <FixedInfoItem
                      label="Target名"
                      value={selectedVulnerability.target}
                      icon={<InfoOutlined fontSize="small" />}
                    />
                  </Grid>
                  <Grid size={{ xs: 12, md: 6 }}>
                    <FixedInfoItem
                      label="SSVC"
                      value={selectedVulnerability.ssvc}
                      icon={<WarningAmber fontSize="small" />}
                    />
                  </Grid>
                  <Grid size={{ xs: 12, md: 6 }}>
                    <FixedInfoItem
                      label="パッケージマネージャー"
                      value={selectedVulnerability.packageManager}
                      icon={<InfoOutlined fontSize="small" />}
                    />
                  </Grid>
                </Grid>
              </Box>
            </Paper>

            {/* カード3: 影響と対策 */}
            <Paper variant="outlined">
              <Box
                sx={{
                  p: 2,
                  display: "flex",
                  alignItems: "center",
                  gap: 1,
                  borderBottom: 1,
                  borderColor: "divider",
                }}
              >
                <InfoOutlined color="action" />
                <Typography variant="h6" sx={{ fontWeight: 600 }}>
                  影響と対策
                </Typography>
              </Box>
              <Box sx={{ p: 2 }}>
                <Typography variant="subtitle2" color="text.secondary">
                  影響バージョンと修正バージョン
                </Typography>
                <Typography
                  sx={{ mb: 2, fontWeight: 500 }}
                >{`${selectedVulnerability.affectedVersions} → ${selectedVulnerability.fixedVersions}`}</Typography>
                <Typography variant="subtitle2" color="text.secondary">
                  Mitigation・緩和策
                </Typography>
                <Typography sx={{ whiteSpace: "pre-line", fontWeight: 500 }}>
                  {selectedVulnerability.mitigation}
                </Typography>
              </Box>
            </Paper>

            {/* カード4: 脆弱性詳細 */}
            <Paper variant="outlined">
              <Box
                sx={{
                  p: 2,
                  display: "flex",
                  alignItems: "center",
                  gap: 1,
                  borderBottom: 1,
                  borderColor: "divider",
                }}
              >
                <VerifiedUserOutlined color="action" />
                <Typography variant="h6" sx={{ fontWeight: 600 }}>
                  脆弱性詳細
                </Typography>
              </Box>
              <Box sx={{ p: 2 }}>
                <Typography sx={{ whiteSpace: "pre-line" }}>
                  {selectedVulnerability.description}
                </Typography>
              </Box>
            </Paper>
          </Box>
        </Box>
      </DialogContent>
    </Dialog>
  );
}
