"""Change the null setting for the account table

Revision ID: ebf329b1b534
Revises: 8bd3d29afe74
Create Date: 2025-10-28 00:53:19.482583

"""

from alembic import op
from os import environ
from uuid import UUID
import sqlalchemy as sa
from sqlalchemy import MetaData


# revision identifiers, used by Alembic.
revision = "ebf329b1b534"
down_revision = "8bd3d29afe74"
branch_labels = None
depends_on = None


# copy constants from constants.py instead of import
MEMBER_UUID: UUID = UUID(int=0xCAFE0001)
NOT_MEMBER_UUID: UUID = UUID(int=0xCAFE0002)
SYSTEM_UUID: UUID = UUID(int=0xCAFE0011)
SYSTEM_EMAIL: str = environ.get("SYSTEM_EMAIL") or "SYSTEM_ACCOUNT"


def insert_threatconnectome_system_accounts() -> None:
    connection = op.get_bind()
    meta = MetaData()
    meta.reflect(bind=connection, only=["account"])
    account_table = meta.tables["account"]

    op.bulk_insert(
        account_table,
        [
            # Note:
            #   All entries should have *same keys*, otherwise some column can be ignored.
            #   Entries below will make SQL: 'INSERT INTO account ("user_id", uid, email, disabled)
            #   VALUES (...), (...), (...)' based on the first entry. If only the 3rd entry has
            #   a key "years", it will be ignored (because the first entry does not have "years").
            {
                "user_id": str(MEMBER_UUID),
                "uid": "(pseudo account: pteam member)",
                "email": None,
                "disabled": True,
            },
            {
                "user_id": str(NOT_MEMBER_UUID),
                "uid": "(pseudo account: not pteam member)",
                "email": None,
                "disabled": True,
            },
            {
                "user_id": str(SYSTEM_UUID),
                "uid": "(pseudo account: system)",
                "email": SYSTEM_EMAIL,
                "disabled": True,
            },
        ],
    )


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(
        "DELETE FROM account WHERE uid IN ('(pseudo account: pteam member)', '(pseudo account: not pteam member)', '(pseudo account: system)') "
    )
    op.alter_column("account", "uid", existing_type=sa.TEXT(), nullable=False)
    op.alter_column("account", "email", existing_type=sa.VARCHAR(length=255), nullable=False)
    op.alter_column("account", "years", existing_type=sa.INTEGER(), nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("account", "years", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column("account", "email", existing_type=sa.VARCHAR(length=255), nullable=True)
    op.alter_column("account", "uid", existing_type=sa.TEXT(), nullable=True)
    insert_threatconnectome_system_accounts()
    # ### end Alembic commands ###
