version: "3.5"
services:
  api:
    build:
      context: ../
      dockerfile: ./demo/api.dockerfile.demo
      args:
        - FIREBASE_CRED=${FIREBASE_CRED}
    depends_on:
      firebase:
        condition: service_started
      db:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      - FIREBASE_AUTH_EMULATOR_HOST=firebase:9099 # use firebase auth emulator
    labels:
      - traefik.http.routers.api.entrypoints=http
      - traefik.http.routers.api.priority=10
      - traefik.http.routers.api.rule=PathPrefix(`/api`)
      - traefik.http.routers.api.service=api
      - traefik.http.routers.api.middlewares=api@docker
      - traefik.http.middlewares.api.stripPrefix.prefixes=/api
      - traefik.http.services.api.loadBalancer.server.port=80
    restart: always
  db:
    build:
      context: ./
      dockerfile: ./db.dockerfile.demo
      args:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    env_file:
      - ./.env
    restart: always
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U ${DB_USER}
      interval: 10s
      timeout: 5s
      retries: 2
  traefik:
    build:
      context: ./
      dockerfile: ./traefik.dockerfile.demo
    depends_on:
      - api
      - web
    ports:
      - 80:80
      - 8080:8080
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  web:
    build:
      context: ../
      dockerfile: ./demo/web.dockerfile.demo
    env_file:
      - ./.env
    labels:
      - traefik.http.routers.web.entrypoints=http
      - traefik.http.routers.web.priority=1
      - traefik.http.routers.web.rule=PathPrefix(`/`)
    restart: always
  firebase:
    build:
        context: ./
        dockerfile: ./firebase.dockerfile.demo
    ports:
      - 4000:4000 # Emulator Suite UI
      - 9099:9099 # Auth
    tty: true
    restart: always
